@prefix bridge: <http://example.org/bridge#> .
@prefix exec: <http://example.org/execution#> .
@prefix dsl: <http://example.org/dsl#> .
@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .
@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> .
@prefix owl: <http://www.w3.org/2002/07/owl#> .
@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .

# ============================================
# Bridge Ontology - MAPPING DSL to Execution
# ============================================

# ===== Core Mapping Classes =====

bridge:DSLGoal a owl:Class ;
    rdfs:label "DSL Goal" ;
    rdfs:comment "A goal as expressed in the DSL input" .

bridge:ParameterMapping a owl:Class ;
    rdfs:label "Parameter Mapping" ;
    rdfs:comment "Mapping between DSL parameters and execution parameters" .

bridge:ResultMapping a owl:Class ;
    rdfs:label "Result Mapping" ;
    rdfs:comment "Mapping of execution results to DSL output format" .

# ===== Mapping Properties =====

bridge:mapsToExecutionGoal a owl:ObjectProperty ;
    rdfs:domain bridge:DSLGoal ;
    rdfs:range exec:Goal ;
    rdfs:comment "Maps a DSL goal to an execution goal" .

bridge:hasParameterMapping a owl:ObjectProperty ;
    rdfs:domain bridge:DSLGoal ;
    rdfs:range bridge:ParameterMapping .

bridge:hasResultMapping a owl:ObjectProperty ;
    rdfs:domain bridge:DSLGoal ;
    rdfs:range bridge:ResultMapping .

bridge:dslParameterName a owl:DatatypeProperty ;
    rdfs:domain bridge:ParameterMapping ;
    rdfs:range xsd:string .

bridge:executionParameterName a owl:DatatypeProperty ;
    rdfs:domain bridge:ParameterMapping ;
    rdfs:range xsd:string .

bridge:parameterType a owl:DatatypeProperty ;
    rdfs:domain bridge:ParameterMapping ;
    rdfs:range xsd:string ;
    rdfs:comment "Type: string, integer, date, boolean, object" .

bridge:isRequired a owl:DatatypeProperty ;
    rdfs:domain bridge:ParameterMapping ;
    rdfs:range xsd:boolean .

bridge:defaultValue a owl:DatatypeProperty ;
    rdfs:domain bridge:ParameterMapping ;
    rdfs:range xsd:string .

# ============================================
# Goal 1: Query Failed Jobs with Cooling
# ============================================

bridge:DSL_QueryFailedJobsWithCooling a bridge:DSLGoal ;
    rdfs:label "Query Failed Jobs with Cooling (DSL)" ;
    bridge:dslName "query_failed_jobs_with_cooling" ;
    bridge:mapsToExecutionGoal exec:QueryFailedCoolingJobs ;
    bridge:hasParameterMapping bridge:G1_DateParam ;
    bridge:hasResultMapping bridge:G1_ResultMap ;
    rdfs:comment "DSL goal for querying failed jobs that require cooling" .

bridge:G1_DateParam a bridge:ParameterMapping ;
    bridge:dslParameterName "date" ;
    bridge:executionParameterName "target_date" ;
    bridge:parameterType "date" ;
    bridge:isRequired true ;
    rdfs:comment "Date for which to query failed jobs" .

bridge:G1_ResultMap a bridge:ResultMapping ;
    bridge:resultFormat "json" ;
    bridge:resultStructure """
        {
            "goal": "query_failed_jobs_with_cooling",
            "status": "success|failure",
            "data": {
                "failed_jobs": [...],
                "summary": {...}
            },
            "timestamp": "ISO8601"
        }
    """ .

# ============================================
# Goal 2: Detect Anomaly for Product
# ============================================

bridge:DSL_DetectAnomalyForProduct a bridge:DSLGoal ;
    rdfs:label "Detect Anomaly for Product (DSL)" ;
    bridge:dslName "detect_anomaly_for_product" ;
    bridge:mapsToExecutionGoal exec:DetectAnomalyForProduct ;
    bridge:hasParameterMapping bridge:G2_ProductIdParam ;
    bridge:hasParameterMapping bridge:G2_DateRangeParam ;
    bridge:hasParameterMapping bridge:G2_TargetMachineParam ;
    bridge:hasResultMapping bridge:G2_ResultMap .

bridge:G2_ProductIdParam a bridge:ParameterMapping ;
    bridge:dslParameterName "product_id" ;
    bridge:executionParameterName "product_id" ;
    bridge:parameterType "string" ;
    bridge:isRequired true .

bridge:G2_DateRangeParam a bridge:ParameterMapping ;
    bridge:dslParameterName "date_range" ;
    bridge:executionParameterName "date_range" ;
    bridge:parameterType "object" ;
    bridge:isRequired true ;
    bridge:subParameters """
        {
            "start": "datetime",
            "end": "datetime"
        }
    """ .

bridge:G2_TargetMachineParam a bridge:ParameterMapping ;
    bridge:dslParameterName "target_machine" ;
    bridge:executionParameterName "machine_id" ;
    bridge:parameterType "string" ;
    bridge:isRequired false ;
    bridge:defaultValue "auto-detect" .

bridge:G2_ResultMap a bridge:ResultMapping ;
    bridge:resultFormat "json" ;
    bridge:resultStructure """
        {
            "goal": "detect_anomaly_for_product",
            "status": "success|failure",
            "data": {
                "anomaly_score": 0.0-1.0,
                "is_anomaly": boolean,
                "detected_patterns": [...],
                "confidence": 0.0-1.0
            }
        }
    """ .

# ============================================
# Goal 3: Predict Completion Time
# ============================================

bridge:DSL_PredictFirstCompletionTime a bridge:DSLGoal ;
    rdfs:label "Predict First Completion Time (DSL)" ;
    bridge:dslName "predict_first_completion_time" ;
    bridge:mapsToExecutionGoal exec:PredictCompletionTime ;
    bridge:hasParameterMapping bridge:G3_ProductIdParam ;
    bridge:hasParameterMapping bridge:G3_QuantityParam ;
    bridge:hasResultMapping bridge:G3_ResultMap .

bridge:G3_ProductIdParam a bridge:ParameterMapping ;
    bridge:dslParameterName "product_id" ;
    bridge:executionParameterName "product_id" ;
    bridge:parameterType "string" ;
    bridge:isRequired true .

bridge:G3_QuantityParam a bridge:ParameterMapping ;
    bridge:dslParameterName "quantity" ;
    bridge:executionParameterName "target_quantity" ;
    bridge:parameterType "integer" ;
    bridge:isRequired true ;
    bridge:minValue 1 ;
    bridge:maxValue 10000 .

bridge:G3_ResultMap a bridge:ResultMapping ;
    bridge:resultFormat "json" ;
    bridge:resultStructure """
        {
            "goal": "predict_first_completion_time",
            "status": "success|failure",
            "data": {
                "predicted_completion": "ISO8601",
                "confidence_interval": {
                    "lower": "ISO8601",
                    "upper": "ISO8601"
                },
                "confidence": 0.0-1.0,
                "critical_path": [...],
                "bottlenecks": [...]
            }
        }
    """ .

# ============================================
# Goal 4: Track Product Position
# ============================================

bridge:DSL_TrackProductPosition a bridge:DSLGoal ;
    rdfs:label "Track Product Position (DSL)" ;
    bridge:dslName "track_product_position" ;
    bridge:mapsToExecutionGoal exec:TrackProductPosition ;
    bridge:hasParameterMapping bridge:G4_ProductIdParam ;
    bridge:hasResultMapping bridge:G4_ResultMap .

bridge:G4_ProductIdParam a bridge:ParameterMapping ;
    bridge:dslParameterName "product_id" ;
    bridge:executionParameterName "product_id" ;
    bridge:parameterType "string" ;
    bridge:isRequired true ;
    bridge:pattern "^Product-[A-Z][0-9]+$" ;
    rdfs:comment "Product ID in format Product-XX" .

bridge:G4_ResultMap a bridge:ResultMapping ;
    bridge:resultFormat "json" ;
    bridge:resultStructure """
        {
            "goal": "track_product_position",
            "status": "success|failure",
            "data": {
                "product_id": "string",
                "current_position": {
                    "zone": "string",
                    "machine": "string",
                    "coordinates": "x,y,z"
                },
                "status": {
                    "operation": "string",
                    "progress": 0-100,
                    "estimated_remaining": "duration"
                },
                "last_updated": "ISO8601"
            }
        }
    """ .

# ============================================
# Common Parameter Mappings
# ============================================

bridge:CommonTimestampParam a bridge:ParameterMapping ;
    bridge:dslParameterName "timestamp" ;
    bridge:executionParameterName "request_timestamp" ;
    bridge:parameterType "datetime" ;
    bridge:isRequired false ;
    bridge:defaultValue "now()" ;
    rdfs:comment "Timestamp of the request" .

bridge:CommonTimeoutParam a bridge:ParameterMapping ;
    bridge:dslParameterName "timeout" ;
    bridge:executionParameterName "execution_timeout" ;
    bridge:parameterType "integer" ;
    bridge:isRequired false ;
    bridge:defaultValue "300" ;
    bridge:unit "seconds" ;
    rdfs:comment "Maximum execution time" .

# ============================================
# Error Mappings
# ============================================

bridge:ErrorMapping a owl:Class ;
    rdfs:label "Error Mapping" ;
    rdfs:comment "Mapping of execution errors to DSL error responses" .

bridge:ValidationError a bridge:ErrorMapping ;
    bridge:errorCode "VALIDATION_ERROR" ;
    bridge:httpStatus 400 ;
    bridge:errorMessage "Invalid input parameters" .

bridge:NotFoundError a bridge:ErrorMapping ;
    bridge:errorCode "NOT_FOUND" ;
    bridge:httpStatus 404 ;
    bridge:errorMessage "Requested resource not found" .

bridge:TimeoutError a bridge:ErrorMapping ;
    bridge:errorCode "TIMEOUT" ;
    bridge:httpStatus 504 ;
    bridge:errorMessage "Execution timeout exceeded" .

bridge:InternalError a bridge:ErrorMapping ;
    bridge:errorCode "INTERNAL_ERROR" ;
    bridge:httpStatus 500 ;
    bridge:errorMessage "Internal server error occurred" .